 vidbench v.0.6 - testing VGA\\VESA system perfomance - by wbc\\bz7 ob.o3.2o16

 ...как-то так :)

 нормальный readme писать лень, так что краткая справка:

 в общем, пузомерка для VGA-видеокарт, гоняет чтение\запись\перремещение блока
 данных из системной памяти во фреймбуфер. Гоняет EGA\VGA и VESA-режимы (в том
 числе и с линейным кадровым буфером), давая возможность оценить скорость 
 видеоподсистемы в стандартных для нее 2D-задачах (тридэ не берем :).
 Тесты проводятся в режимах ввода\вывода байт\слов\двойных слов (8\16\32 бит)

 Требования просты - 386-й проц или выше, 1 МБ или выше системной памяти, ну и
 конечно же VGA\SVGA-совместимая видеокарта (вообще, будет и на EGA работать,
 но точно не скажу - не тестил)

 Запускается просто: vidbench.exe <параметр> <параметр>....

 Без параметров гоняет 4 мегабайта данных в каждом тесте в режиме 0x13
 (320x200x8bpp), а параметрами поведение можно и поменять:

  -q, -quiet    - тихий режим (не требовать нажатия any key)
  -m(mode)      - тестировать указанный VGA\VESA режим (число в HEX-формате),
                  например, -m12  - юзать режим 0x12 (640x480x4bpp)
                            -m101 - юзать VESA-режим 0x101 (640x480x8bpp)
  -f(x),(y),(b) - искать VESA-режим в соответствии с заданными параметрами
                  например, -f640,480,16 - искать режим 640x480x16bpp
                  Если режим не найден - вылетаем с ошибкой
  -l, -lfb      - использовать линейный кадровый буфер для VESA-режимов
                  (требуется VBE 2.0 и выше), если недоступен - вылетаем
                  поведение совместно с VGA-режимами не определено
  -i            - выводить в конце информацию о адаптере (для логирования)
  -mx           - гонять Mode-X (использовать ТОЛЬКО с режимом 0x13!)
  -b(num)       - задать размер передаваемых данных в блоках по 64кб
                  например, -b16 - гонять 1 мегабайт данных

 Примеры использования:
 vidbench.exe -m12 -b16    - тестить VGA-режим 0x12 и гонять метр данных
 vidbench.exe -m13 -mx -q  - тестить Mode-X в тихом режиме
 vidbench.exe -f640,480,16 - искать  VESA-режим 640x480x16bpp и тестить его
 vidbench.exe -m101 -lfb   - тестить VESA-режим 640x480x8bpp c LFB

 Результат пишется наружу примерно в таком виде:

 adapter type: VESA, version 2.0 
 VESA OEM string: S3 Incorporated. 86C775/86C785 
 -----------------------------------------------------------------------
 results for VESA mode 0x101 (640x480x8bpp) LFB, 4096 KiB trasfer: 

 8-bit  write:     10.178 MB/s  -   9.706 MiB/s  -   33.13 fps
 8-bit   read:      1.734 MB/s  -   1.653 MiB/s  -    5.64 fps
 8-bit   move:     10.178 MB/s  -   9.706 MiB/s  -   33.13 fps

 16-bit write:     26.189 MB/s  -  24.976 MiB/s  -   85.25 fps
 16-bit  read:      3.468 MB/s  -   3.308 MiB/s  -   11.29 fps
 16-bit  move:     26.189 MB/s  -  24.976 MiB/s  -   85.25 fps

 32-bit write:     85.899 MB/s  -  81.920 MiB/s  -  279.62 fps
 32-bit  read:      6.938 MB/s  -   6.616 MiB/s  -   22.58 fps
 32-bit  move:     71.583 MB/s  -  68.267 MiB/s  -  233.02 fps

 
 Думаю, все ясно и без пояснений. Мегабайты в секунду считаются делением на
 10^6, мебибайты - делением на 2^20, кадры в секунду - делением на размер
 одной страницы фреймбуфера. В целом, результаты вполне отражают истину и их
 можно сравнивать с результатами VIDSPEED и X-VESA (за исключением LFB - ниже
 названные проги тестить режимы с LFB не умеют, а vidbench - умеет :)

 теперь по багам и глюкам:

 - тестим только первые 64 килобайта памяти - некритично, так как обычно
   скорость доступа к памяти на всех ее участках одинакова
 - как обычно, использование параметра -m может привести к глюкам и зависа-
   ниям, но, к счастью, их вероятность сильно снизилась.

   Вкратце - я переехал на свой VBE-интерфейс, так что все ошибки теперь можно
   отловить без гемороя, однако словить глюк все еще можно, но вероятность его
   появления теперь целиком и полностью зависит от кривизны видеобиоса :)

   Например, на Matrox Millennium с двумя метрами можно через ключик -m найти
   режим 1024x768x32bpp, и он ДАЖЕ будет работать(!), несмотря на отсутствие
   его в списке режимов, мало того, для этого режима в modeinfo.ModeAttributes
   проставлен флаг поддержки со стороны железа(!), хотя режим требует минимум
   4 МБ видеопамяти!

   При юзании параметра -f такого глюка нет, так как эта функция вернет -1,
   если режим не найден (кстати, именно таким способом и надо ставить VESA-
   режимы в своих играх\демах\интрах, чтобы не зафелиться!)
 - не тестит регистры-защелки - возможно, запилю позже
 - работает под Windows, но лучше тестить из голого DOS'а (не забываем про
   недоступность LFB под Win2000\XP и выше!)
 - да и вообще - баг на баге и багом погоняет :)

 Исходники (Watcom C 11.x \ Open Watcom) лежат в папке SRC, пользуйтсь :),
 а еще в папке с прогой есть батник test.bat, запускаем его так:
 test.bat <filename.txt>, например, test.bat results.txt

 Этот батник прогонит режим 0x13 (320x200x8bpp), он же, но в mode-x, VESA-
 режим 0x101 (640x480x8bpp) и он же, но с LFB. Идеально для пакетного теста
 пачки видеокарт: вставил-включил-прогнал-поставил другую-goto start :)

 Уффф, вроде все. Если что-то не работает\глючит\взрывается - донимать меня на
 irc.forestnet.org:7000/#z80 или в крайнем случае по почте - wbc.bz7@gmail.com

 ----------------------------------------------------------------------------
 origin: ........with best regards, Artem Vasilev >> wbc \\ b-state ob.o3.2o16