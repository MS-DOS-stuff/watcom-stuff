flexptc api :) description:

короче, открываем вначале консоль:
 int ptc_open(char* caption, int width, int height, int bpp, int flags);

пример: ptc_open("", 640, 350, 8, 0); // для 640x350x8bpp

либа найдет все доступные VESA-режимы и отберет подходящие, вылезет менюшка: 

 requested console mode: 640x350x8bpp
 select available mode: 
 0 - 640x400x8bpp  VESA banked - mode 0x100
 1 - 640x480x8bpp  VESA banked - mode 0x101
 ------------------------------------------ 
 press [0 - 1] to select mode, [ESC] to exit...  

выбираем нужный режим и идем дальше.

но! вначале нам нужен массив, в который будем все рендерить, вида
 unsigned char* buffer[640*350]; // для 640x350x8bpp, для 16\32bpp используем
                                 // типы unsigned (short\long) соответственно

рисуем\рисуем, как закончили, делаем
 int ptc_update(void* buf);

пример: ptc_update(buffer);

наш буфер перебрасывается и в случае 16\32bpp конвертится в формат консоли
(+ еще фикс под pitch и прочие трючки)
если нужна синхронизация с вертикальным ретрейсом, делаем
 void ptc_wait();

для 8bpp режимов нужно работать с палитрой, для этого есть тип
 union {
     struct { unsigned char b, g, r, a;};
     unsigned int argb;
 } ptc_palette;

пример: ptc_palette* pal[256];

работаем с палитрой (как видим, можно и непосредственно 32-битное значение
дергать, и напрямую к компонентам обращаться), закончили - делаем
 int ptc_setpal(ptc_palette* pal);

пример: ptc_setpal(pal);

читать палитру из консоли нельзя, да и зачем? :)
оооочень желательно подождать до ретрейса ибо иначе вылезут секучки и снег

думаю, этих функций в целом достаточно :) если аккуратно, то можно дергать
функции VBE 2.0, но так, чтобы либа не ругалась, иначе...ну вы поняли :)

кончил - протри станок! ну то есть
 int ptc_close(); // или back to da DOS

в общем, вот и все, что нужно знать о работе с flexptc. еще маленький пример:
(здесь .. - всякие операторы\инклуды\дефайны\переменные, не относящиеся к либе)
 
 ..подключаем всякую мишуру
 #include "flexptc.c" 

 int main() {
 
 ..всякие переменные нашей проги
 unsigned char* buffer[640*350];    // фреймбуфер
 ptc_palette*   pal[256];           // палитра

 // начало
 ..начальная инициализация
 ptc_open("", 640, 350, 8, 0);

 ..еще нужный инит

 while (!kbhit()) { // клавотык - для примера
     ..рисуем в буфер\пилим палитру\еще что-нибудь
     ptc_wait(); // ждем ретрейса
     ptc_setpal(pal); // ставим палитру (для 16\32bpp не нужно)
     ptc_update(buffer); // кидаем буфер на консоль
     ..еще какой-нибудь стафф
 }; getch();

 ..деинициализация
 ptc_close(); // уфф! 

 return 0;
 }

вот и все :)
остается добавить, что либа работает ТОООЛЬКО под DOS\VBE, пока нет поддержки
VGA\fakemode, ну и windows\еще чегонить. coming soon! 

--wbcbz7 ob.o3.zolb